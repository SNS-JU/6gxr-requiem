{
  "benchmark": [
    {
      "scale": "joint",
      "tester": {
        "type": "generic",
        "environ": {
          "repeat": [1, 2, 3, 4, 5],
          "scenario-name": "migration",
          "relativeInitialWindow": 50,
          "bw": 400,
          "delay": [5, 50, 100, 250, 350],
          "validation": "skip",
          "video": "bbb_360p@30.00fps.mp4",
          "mode": "stream",
          "Scenario": "involuntary",
          "scenario": "involuntary",
          "keepalive": 50,
          "crop": 3,
          "migrateAfter": 0
        },
        "script": "../../../test-in-screen --out-dir $PWD --bw $bw --delay $delay --video $PWD/../../../videos/$video --rtp-timestamp --vqa-metric dssim --proto raw-quic --result $PWD/result.json --display-video none --video-export-format mp4:mp4 --video-as-ref -s $scenario --crop-stats $crop -- --disable-transcode --keepalive $keepalive --mode $mode --migrate-after $migrateAfter --next-client-address 10.0.2.1:5002 --relative-initial-window $relativeInitialWindow --validation $validation"
      }
    },
    {
      "scale": "joint",
      "tester": {
        "type": "generic",
        "environ": {
          "repeat": [1, 2, 3, 4, 5],
          "scenario-name": "migration",
          "relativeInitialWindow": 50,
          "bw": 400,
          "delay": [5, 50, 100, 250, 350],
          "validation": "skip",
          "video": "bbb_360p@30.00fps.mp4",
          "mode": "stream",
          "Scenario": "planned-skip",
          "scenario": "none",
          "keepalive": 50,
          "crop": 3,
          "migrateAfter": 4
        },
        "script": "../../../test-in-screen --out-dir $PWD --bw $bw --delay $delay --video $PWD/../../../videos/$video --rtp-timestamp --vqa-metric dssim --proto raw-quic --result $PWD/result.json --display-video none --video-export-format mp4:mp4 --video-as-ref -s $scenario --crop-stats $crop -- --disable-transcode --keepalive $keepalive --mode $mode --migrate-after $migrateAfter --next-client-address 10.0.2.1:5002 --relative-initial-window $relativeInitialWindow --validation $validation"
      }
    },
    {
      "scale": "joint",
      "tester": {
        "type": "generic",
        "environ": {
          "repeat": [1, 2, 3, 4, 5],
          "scenario-name": "migration",
          "relativeInitialWindow": 50,
          "bw": 400,
          "delay": [5, 50, 100, 250, 350],
          "validation": "normal",
          "video": "bbb_360p@30.00fps.mp4",
          "mode": "stream",
          "Scenario": "planned-normal",
          "scenario": "none",
          "keepalive": 50,
          "crop": 3,
          "migrateAfter": 4
        },
        "script": "../../../test-in-screen --out-dir $PWD --bw $bw --delay $delay --video $PWD/../../../videos/$video --rtp-timestamp --vqa-metric dssim --proto raw-quic --result $PWD/result.json --display-video none --video-export-format mp4:mp4 --video-as-ref -s $scenario --crop-stats $crop -- --disable-transcode --keepalive $keepalive --mode $mode --migrate-after $migrateAfter --next-client-address 10.0.2.1:5002 --relative-initial-window $relativeInitialWindow --validation $validation"
      }
    },
    {
      "scale": "joint",
      "tester": {
        "type": "generic",
        "environ": {
          "repeat": [1, 2, 3, 4, 5],
          "scenario-name": "migration",
          "relativeInitialWindow": 50,
          "bw": 400,
          "delay": [5, 50, 100, 250, 350],
          "validation": "skip",
          "video": "bbb_360p@30.00fps.mp4",
          "mode": "stream",
          "Scenario": "baseline",
          "scenario": "baseline",
          "keepalive": 50,
          "crop": 3,
          "migrateAfter": 0
        },
        "script": "../../../test-in-screen --out-dir $PWD --bw $bw --delay $delay --video $PWD/../../../videos/$video --rtp-timestamp --vqa-metric dssim --proto raw-quic --result $PWD/result.json --display-video none --video-export-format mp4:mp4 --video-as-ref -s $scenario --crop-stats $crop -- --disable-transcode --keepalive $keepalive --mode $mode --migrate-after $migrateAfter --next-client-address 10.0.2.1:5002 --relative-initial-window $relativeInitialWindow --validation $validation"
      }
    },
    {
      "scale": "joint",
      "tester": {
        "type": "generic",
        "environ": {
          "repeat": [1, 2, 3, 4, 5],
          "scenario-name": "migration",
          "relativeInitialWindow": 50,
          "bw": 400,
          "delay": [5, 50, 100, 250, 350],
          "validation": "skip",
          "video": "bbb_360p@30.00fps.mp4",
          "mode": "stream",
          "Scenario": "udp",
          "scenario": "none",
          "keepalive": 50,
          "crop": 3,
          "migrateAfter": 0
        },
        "script": "../../../test-in-screen --out-dir $PWD --bw $bw --delay $delay --video $PWD/../../../videos/$video --rtp-timestamp --vqa-metric dssim --proto udp --result $PWD/result.json --display-video none --video-export-format mp4:mp4 --video-as-ref -s $scenario --crop-stats $crop -- --disable-transcode --timeout 18"
      }
    }
  ],
  "default": {
    "scale": "outer",
    "pipeline": {"name": "none"},
    "sut": {"type": "none"},
    "tester": {"type": "generic"},
    "traffic": {}
  },
  "visualize": [
    {
      "type": "simple",
      "title": "migration: Mean Latency [ms]",
      "x-axis": "delay",
      "y-axis": "avg_mean",
      "error-bar":  "stddev_mean",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.rtp-stats.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.rtp-stats.mean_y"},
            "avg_median": {"$avg": "$out.rtp-stats.median_y"},
            "stddev_median": {"$stdDevPop": "$out.rtp-stats.median_y"}
          }
        }
      ]
    },
    {
      "type": "simple",
      "title": "migration: cropped Mean Latency realative to baseline [ms]",
      "x-axis": "delay",
      "y-axis": "from_baseline",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.rtp-stats.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.rtp-stats.mean_y"},
            "avg_median": {"$avg": "$out.rtp-stats.median_y"},
            "stddev_median": {"$stdDevPop": "$out.rtp-stats.median_y"}
          }
        },
        {
          "$group": {
            "_id": { "delay": "$delay" },
            "y": { "$push": {"k": "$scenario",
                             "v": "$avg_mean" } },
            "dev": { "$push": {"k": "$scenario",
                               "v": "$stddev_mean"} }
          }
        },
        {
          "$project": {
            "delay": "$_id.delay",
            "y": {"$arrayToObject": "$y"},
            "dev": {"$arrayToObject": "$dev"}
          }
        },
        {
          "$addFields": {
            "from_baseline": {
              "$map": {
                "input": {"$objectToArray": "$y"},
                "as": "y",
                "in": {
                  "k": "$$y.k",
                  "v": { "$subtract": ["$$y.v",
                                       "$$ROOT.y.baseline"] }
                }
              }
            }
          }
        },
        { "$unwind": "$from_baseline" },
        {
          "$project": {
            "delay": 1,
            "dev": {
              "$first" : {
                "$filter": {
                  "input": {"$objectToArray": "$dev"},
                  "as": "this",
                  "cond": {"$eq": ["$$this.k", "$$ROOT.from_baseline.k"]}
                }
              }
            },
            "scenario": "$from_baseline.k",
            "from_baseline": "$from_baseline.v"
          }
        },
        { "$addFields": { "stddev": "$dev.v"} }
      ]
    },
    {
      "type": "simple",
      "title": "migration: cropped Mean Latency divided to baseline [ms]",
      "x-axis": "delay",
      "y-axis": "from_baseline",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.rtp-stats.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.rtp-stats.mean_y"},
            "avg_median": {"$avg": "$out.rtp-stats.median_y"},
            "stddev_median": {"$stdDevPop": "$out.rtp-stats.median_y"}
          }
        },
        {
          "$group": {
            "_id": { "delay": "$delay" },
            "y": { "$push": {"k": "$scenario",
                             "v": "$avg_mean" } },
            "dev": { "$push": {"k": "$scenario",
                               "v": "$stddev_mean"} }
          }
        },
        {
          "$project": {
            "delay": "$_id.delay",
            "y": {"$arrayToObject": "$y"},
            "dev": {"$arrayToObject": "$dev"}
          }
        },
        {
          "$addFields": {
            "from_baseline": {
              "$map": {
                "input": {"$objectToArray": "$y"},
                "as": "y",
                "in": {
                  "k": "$$y.k",
                  "v": { "$divide": ["$$y.v",
                                     "$$ROOT.y.baseline"] }
                }
              }
            }
          }
        },
        { "$unwind": "$from_baseline" },
        {
          "$project": {
            "delay": 1,
            "dev": {
              "$first" : {
                "$filter": {
                  "input": {"$objectToArray": "$dev"},
                  "as": "this",
                  "cond": {"$eq": ["$$this.k", "$$ROOT.from_baseline.k"]}
                }
              }
            },
            "scenario": "$from_baseline.k",
            "from_baseline": "$from_baseline.v"
          }
        },
        { "$addFields": { "stddev": "$dev.v"} }
      ]
    },
    {
      "type": "simple",
      "title": "migration: Mean DSSIM",
      "x-axis": "delay",
      "y-axis": "avg_mean",
      "error-bar":  "stddev_mean",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.dssim.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.dssim.mean_y"},
            "avg_median": {"$avg": "$out.dssim.median_y"},
            "stddev_median": {"$stdDevPop": "$out.dssim.median_y"}
          }
        }
      ]
    },
    {
      "type": "simple",
      "title": "migration: Mean cropped DSSIM",
      "x-axis": "delay",
      "y-axis": "avg_mean",
      "error-bar":  "stddev_mean",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.cropped-dssim.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.cropped-dssim.mean_y"},
            "avg_median": {"$avg": "$out.cropped-dssim.median_y"},
            "stddev_median": {"$stdDevPop": "$out.cropped-dssim.median_y"}
          }
        }
      ]
    },


    {
      "type": "simple",
      "title": "migration: Mean Latency [ms], diff from planned-normal",
      "x-axis": "delay",
      "y-axis": "from_baseline",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        { "$addFields": { "sname": {"$substr": ["$tester.environ.Scenario",
                                                0,
                                                7]}}},
        { "$match": { "sname": "planned"}},
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$substr":
                         [{"$first": "$tester.environ.Scenario"}, 8, -1]},
            "avg_mean": {"$avg": "$out.rtp-stats.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.rtp-stats.mean_y"},
            "avg_median": {"$avg": "$out.rtp-stats.median_y"},
            "stddev_median": {"$stdDevPop": "$out.rtp-stats.median_y"}
          }
        },
        {
          "$group": {
            "_id": { "delay": "$delay" },
            "y": { "$push": {"k": "$scenario",
                             "v": "$avg_mean" } },
            "dev": { "$push": {"k": "$scenario",
                               "v": "$stddev_mean"} }
          }
        },
        {
          "$project": {
            "delay": "$_id.delay",
            "y": {"$arrayToObject": "$y"},
            "dev": {"$arrayToObject": "$dev"}
          }
        },
        {
          "$addFields": {
            "from_baseline": {
              "$map": {
                "input": {"$objectToArray": "$y"},
                "as": "y",
                "in": {
                  "k": "$$y.k",
                  "v": { "$subtract": ["$$y.v",
                                       "$$ROOT.y.normal"] }
                }
              }
            }
          }
        },
        { "$unwind": "$from_baseline" },
        {
          "$project": {
            "delay": 1,
            "dev": {
              "$first" : {
                "$filter": {
                  "input": {"$objectToArray": "$dev"},
                  "as": "this",
                  "cond": {"$eq": ["$$this.k", "$$ROOT.from_baseline.k"]}
                }
              }
            },
            "scenario": "$from_baseline.k",
            "from_baseline": "$from_baseline.v"
          }
        },
        { "$addFields": { "stddev": "$dev.v"} }
      ]
    },
    {
      "type": "simple",
      "title": "migration: Mean Latency [ms], divide by planned-normal",
      "x-axis": "delay",
      "y-axis": "from_baseline",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        { "$addFields": { "sname": {"$substr": ["$tester.environ.Scenario",
                                                0,
                                                7]}}},
        { "$match": { "sname": "planned"}},
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$substr":
                         [{"$first": "$tester.environ.Scenario"}, 8, -1]},
            "avg_mean": {"$avg": "$out.rtp-stats.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.rtp-stats.mean_y"},
            "avg_median": {"$avg": "$out.rtp-stats.median_y"},
            "stddev_median": {"$stdDevPop": "$out.rtp-stats.median_y"}
          }
        },
        {
          "$group": {
            "_id": { "delay": "$delay" },
            "y": { "$push": {"k": "$scenario",
                             "v": "$avg_mean" } },
            "dev": { "$push": {"k": "$scenario",
                               "v": "$stddev_mean"} }
          }
        },
        {
          "$project": {
            "delay": "$_id.delay",
            "y": {"$arrayToObject": "$y"},
            "dev": {"$arrayToObject": "$dev"}
          }
        },
        {
          "$addFields": {
            "from_baseline": {
              "$map": {
                "input": {"$objectToArray": "$y"},
                "as": "y",
                "in": {
                  "k": "$$y.k",
                  "v": { "$divide": ["$$y.v",
                                     "$$ROOT.y.normal"] }
                }
              }
            }
          }
        },
        { "$unwind": "$from_baseline" },
        {
          "$project": {
            "delay": 1,
            "dev": {
              "$first" : {
                "$filter": {
                  "input": {"$objectToArray": "$dev"},
                  "as": "this",
                  "cond": {"$eq": ["$$this.k", "$$ROOT.from_baseline.k"]}
                }
              }
            },
            "scenario": "$from_baseline.k",
            "from_baseline": "$from_baseline.v"
          }
        },
        { "$addFields": { "stddev": "$dev.v"} }
      ]
    },
    {
      "type": "simple",
      "title": "migration: Mean cropped DSSIM ---",
      "x-axis": "delay",
      "y-axis": "avg_mean",
      "error-bar":  "stddev_mean",
      "group-by": ["scenario"],
      "aggregate": [
        { "$match": { "tester.environ.scenario-name": "migration" } },
        { "$addFields": { "sname": {"$substr": ["$tester.environ.Scenario",
                                                0,
                                                7]}}},
        { "$match": { "sname": "planned"}},
        {
          "$group": {
            "_id": {
              "delay": "$tester.environ.delay",
              "scenario": "$tester.environ.Scenario"
            },
            "delay": {"$first": "$tester.environ.delay"},
            "scenario": {"$first": "$tester.environ.Scenario"},
            "avg_mean": {"$avg": "$out.cropped-dssim.mean_y"},
            "stddev_mean": {"$stdDevPop": "$out.cropped-dssim.mean_y"},
            "avg_median": {"$avg": "$out.cropped-dssim.median_y"},
            "stddev_median": {"$stdDevPop": "$out.cropped-dssim.median_y"}
          }
        }
      ]
    }
  ]
}
